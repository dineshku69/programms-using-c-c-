#include <iostream>
#include <string>
using namespace std;

const int MAX_EMPLOYEES = 100;

class Employee {
private:
    string name;
    double hourlyRate;
    double hoursWorked;

public:
    Employee(const string& name, double hourlyRate)
        : name(name), hourlyRate(hourlyRate), hoursWorked(0) {}

    void setHoursWorked(double hours) {
        hoursWorked = hours;
    }

    double calculateSalary() const {
        return hourlyRate * hoursWorked;
    }

    void display() const {
        cout << "Name: " << name << endl;
        cout << "Hourly Rate: $" << hourlyRate << endl;
        cout << "Hours Worked: " << hoursWorked << " hours" << endl;
        cout << "Monthly Salary: $" << calculateSalary() << endl;
    }
};

int main() {
    Employee employees[MAX_EMPLOYEES];
    int numEmployees = 0;

    cout << "Employee Payroll System" << endl;
    char choice;

    do {
        cout << "\n1. Add Employee\n";
        cout << "2. Enter Hours Worked\n";
        cout << "3. Display Payroll\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case '1': {
                string name;
                double hourlyRate;
                cout << "Enter employee name: ";
                cin.ignore(); // Ignore the newline character left in the input buffer
                getline(cin, name);

                cout << "Enter hourly rate: $";
                cin >> hourlyRate;

                employees[numEmployees] = Employee(name, hourlyRate);
                numEmployees++;

                cout << "Employee added successfully!" << endl;
                break;
            }
            case '2': {
                int employeeIndex;
                double hoursWorked;
                cout << "Enter employee index: ";
                cin >> employeeIndex;

                if (employeeIndex >= 0 && employeeIndex < numEmployees) {
                    cout << "Enter hours worked: ";
                    cin >> hoursWorked;

                    employees[employeeIndex].setHoursWorked(hoursWorked);
                    cout << "Hours worked updated successfully!" << endl;
                } else {
                    cout << "Invalid employee index!" << endl;
                }
                break;
            }
            case '3': {
                cout << "\nPayroll Summary:" << endl;
                for (int i = 0; i < numEmployees; i++) {
                    cout << "Employee " << i + 1 << ":" << endl;
                    employees[i].display();
                    cout << endl;
                }
                break;
            }
            case '4':
                cout << "Exiting the program. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != '4');

    return 0;
}
